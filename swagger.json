{
	"openapi": "3.0.1",
	"info": {
		"version": "1.0.1",
		"title": "My pet API",
		"description": "My pet server documentation"
	},
	"consumes": ["application/json", "multipart/form-data"],
	"produces": ["application/json"],
	"servers": [
		{ "url": "http://localhost:3000" },
		{ "url": "https://my-pet-app-8sz1.onrender.com" }
	],
	"tags": [
		{ "name": "Users", "description": "User authorisation endpoint" },
		{ "name": "Pets", "description": "Adding and deleting pets endpoint" },
		{ "name": "Sponsors", "description": "Sponsors list endpoint" },
		{ "name": "News", "description": "News list endpoint" },
		{ "name": "Notices", "description": "Notices list endpoint" }
	],
	"paths": {
		"/users": {
			"get": {
				"tags": ["Users"],
				"summary": "Return user`s and user`s pets cards",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/UserResponse" }
							}
						}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					}
				}
			}
		},
		"/users/register": {
			"post": {
				"tags": ["Users"],
				"summary": "User`s registration",
				"parameters": [],
				"requestBody": {
					"description": "Registration's object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserRegistrationRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#components/schemas/UserRegistrationResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"409": {
						"description": "Email in use.",
						"content": {}
					}
				}
			}
		},
		"/users/login": {
			"post": {
				"tags": ["Users"],
				"summary": "User`s logination",
				"parameters": [],
				"requestBody": {
					"description": "Login object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserLoginRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfull operations.",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/UserLoginResponse" }
							}
						}
					},

					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"401": {
						"description": "Not authorized / Email or password is wrong.",
						"content": {}
					}
				}
			}
		},
		"/users/refresh": {
			"post": {
				"tags": ["Users"],
				"summary": "Refresh security token endpoint",
				"parameters": [],
				"requestBody": {
					"description": "Refresh token string",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RefreshRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfull operations.",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/RefreshResponse" }
							}
						}
					},
					"401": {
						"description": "Not authorized",
						"content": {}
					}
				}
			}
		},
		"/users/current": {
			"post": {
				"tags": ["Users"],
				"summary": "User`s authentification",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations.",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/CurrentUserResponse" }
							}
						}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					}
				}
			}
		},
		"/users/logout": {
			"post": {
				"tags": ["Users"],
				"summary": "User`s logout",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"204": {
						"description": "No content",
						"content": {}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					}
				}
			}
		},
		"/users/update": {
			"put": {
				"tags": ["Users"],
				"summary": "Update user`s data",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Updating object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserFieldsRequest"
							}
						},

						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserAvatarAndFieldsRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/UpdateUserResponse" }
							}
						}
					},
					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					},
					"409": {
						"description": "Email in use.",
						"content": {}
					}
				}
			}
		},
		"/pets": {
			"post": {
				"tags": ["Pets"],
				"summary": "Add user`s pet card",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Updating object",
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/AddPetRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/PetResponse" }
							}
						}
					},
					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					}
				}
			}
		},
		"/pets/:petId": {
			"delete": {
				"tags": ["Pets"],
				"summary": "Delete user`s pet card",
				"parameters": [
					{
						"in": "path",
						"name": "petId",
						"required": true,
						"schema": { "type": "string" },
						"description": "Pet`s id"
					}
				],
				"security": [{ "Bearer": [] }],

				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/DeletePetResponse" }
							}
						}
					},
					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					},
					"404": { "description": "Not found.", "content": {} }
				}
			}
		},
		"/sponsors": {
			"get": {
				"tags": ["Sponsors"],
				"summary": "Return sponsors cards",
				"parameters": [],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/SponsorsResponse" }
							}
						}
					}
				}
			}
		},
		"/articles": {
			"get": {
				"tags": ["News"],
				"summary": "Return news cards",
				"parameters": [
					{
						"in": "query",
						"name": "filter",
						"schema": { "type": "string" },
						"example": "The White House Pushes",
						"required": false,
						"description": "Get all items matching query in any of the fields of title or text"
					},
					{
						"in": "query",
						"name": "sort",
						"schema": {
							"type": "string",
							"enum": ["desc", "asc"],
							"default": "desc"
						},
						"required": false,
						"description": "Sort news cards by date"
					},
					{
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer",
							"default": 1,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to skip before starting to collect the result set"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"default": 6,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to return."
					}
				],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/ArticlesResponse" }
							}
						}
					}
				}
			}
		},
		"/notices": {
			"get": {
				"tags": ["Notices"],
				"summary": "Returns a list of cards by search query.",
				"parameters": [
					{
						"in": "query",
						"name": "filter",
						"schema": { "type": "string" },
						"example": "Gog",
						"required": false,
						"description": "Gets all the items matching the search query by the title field."
					},
					{
						"in": "query",
						"name": "category",
						"schema": {
							"type": "string",
							"enum": ["sell", "for-free", "lost-found"]
						},
						"required": false,
						"description": "Gets all items matching the search query by the category field."
					},
					{
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer",
							"default": 1,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to skip before starting to collect the result set"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"default": 6,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to return."
					}
				],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/NoticesResponse" }
							}
						}
					}
				}
			}
		},
		"/notices/:noticeId": {
			"get": {
				"tags": ["Notices"],
				"summary": "Returns the card by id",
				"parameters": [
					{
						"in": "query",
						"name": "filter",
						"schema": { "type": "string" },
						"example": "Gog",
						"required": false,
						"description": "Get all items matching query in any of the fields of title"
					},
					{
						"in": "query",
						"name": "category",
						"schema": {
							"type": "string",
							"enum": ["sell", "for-free", "lost-found"]
						},
						"required": false,
						"description": "Get all items matching query in category field"
					},
					{
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer",
							"default": 1,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to skip before starting to collect the result set"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"default": 6,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to return."
					}
				],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/ArticlesResponse" }
							}
						}
					}
				}
			}
		},
		"/notices/owner": {
			"get": {
				"tags": ["Notices"],
				"summary": "Returns a list of notices cards created by the user.",
				"parameters": [
					{
						"in": "query",
						"name": "filter",
						"schema": { "type": "string" },
						"example": "Gog",
						"required": false,
						"description": "Get all items matching query in any of the fields of title"
					},
					{
						"in": "query",
						"name": "category",
						"schema": {
							"type": "string",
							"enum": ["sell", "for-free", "lost-found"]
						},
						"required": false,
						"description": "Get all items matching query in category field"
					},
					{
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer",
							"default": 1,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to skip before starting to collect the result set"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"default": 6,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to return."
					}
				],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/ArticlesResponse" }
							}
						}
					}
				}
			}
		},
		"/notices/owner/favorites": {
			"get": {
				"tags": ["Notices"],
				"summary": "Returns a list of the user's favorite notices cards",
				"parameters": [
					{
						"in": "query",
						"name": "filter",
						"schema": { "type": "string" },
						"example": "Gog",
						"required": false,
						"description": "Get all items matching query in any of the fields of title"
					},
					{
						"in": "query",
						"name": "category",
						"schema": {
							"type": "string",
							"enum": ["sell", "for-free", "lost-found"]
						},
						"required": false,
						"description": "Get all items matching query in category field"
					},
					{
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer",
							"default": 1,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to skip before starting to collect the result set"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"default": 6,
							"minimum": 1
						},
						"required": false,
						"description": "The number of items to return."
					}
				],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/ArticlesResponse" }
							}
						}
					}
				}
			}
		},
		"/notices/add-pet": {
			"post": {
				"tags": ["Notices"],
				"summary": "Adds the notice card",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Updating object",
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/AddPetRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/PetResponse" }
							}
						}
					},
					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					}
				}
			}
		},
		"/notices/addFavorite/:noticeId": {
			"patch": {
				"tags": ["Notices"],
				"summary": "Adds the notice card to the user's favorites list.",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Updating object",
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/AddPetRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/PetResponse" }
							}
						}
					},
					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					}
				}
			}
		},
		"/notices/delFavorite/:noticeId": {
			"patch": {
				"tags": ["Notices"],
				"summary": "Removes the notice card from the user's favorites list.",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Updating object",
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/AddPetRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/PetResponse" }
							}
						}
					},
					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					}
				}
			}
		},
		"/notices/del-pet/:noticeId": {
			"delete": {
				"tags": ["Notices"],
				"summary": "Deletes a notice card created by a user.",
				"parameters": [
					{
						"in": "path",
						"name": "petId",
						"required": true,
						"schema": { "type": "string" },
						"description": "Pet`s id"
					}
				],
				"security": [{ "Bearer": [] }],

				"requestBody": {
					"content": {}
				},
				"responses": {
					"200": {
						"description": "Successfull operations",
						"content": {
							"application/json": {
								"schema": { "$ref": "#components/schemas/DeletePetResponse" }
							}
						}
					},
					"400": {
						"description": "Bad request! Missing required name field or wrong field name.",
						"content": {}
					},
					"401": {
						"description": "Not authorized.",
						"content": {}
					},
					"404": { "description": "Not found.", "content": {} }
				}
			}
		}
	},
	"components": {
		"schemas": {
			"UserResponse": {
				"type": "object",
				"required": ["user"],
				"properties": {
					"user": {
						"type": "object",
						"required": [
							"uid",
							"name",
							"email",
							"isNewUser",
							"avatarUrl",
							"favorites",
							"pets"
						],
						"properties": {
							"uid": {
								"type": "string",
								"description": "User id",
								"example": "64bd39c0b38fc2fe5b5dfef8"
							},
							"name": {
								"type": "string",
								"description": "User name",
								"format": "text",
								"example": "Mango"
							},
							"email": {
								"type": "string",
								"description": "User email",
								"format": "email"
							},
							"isNewUser": {
								"type": "boolean",
								"example": false
							},
							"avatarUrl": {
								"type": "string",
								"description": "User avatar url",
								"example": "https://res.cloudinary.com/de2bdafop/image/upload/v1690014491/default-avatar_zfllbo.png"
							},
							"birthday": {
								"type": "date",
								"description": "User birthday date",
								"example": "2022-12-22T00:00:00.000Z"
							},
							"phone": {
								"type": "string",
								"description": "User avatar",
								"example": "+380933443494"
							},
							"city": {
								"type": "string",
								"description": "User location",
								"example": "London"
							},
							"pets": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "Pet`s card id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								}
							},
							"favorites": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "Notice card id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								}
							}
						}
					}
				}
			},
			"UserRegistrationRequest": {
				"type": "object",
				"required": ["name", "email", "password"],
				"properties": {
					"name": {
						"type": "string",
						"description": "User name",
						"format": "text",
						"example": "Mango"
					},
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User password",
						"example": "Qw123456"
					}
				}
			},
			"UserRegistrationResponse": {
				"type": "object",
				"required": ["token", "user"],
				"properties": {
					"token": {
						"type": "string",
						"description": "Security token",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QxZDJAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTAxMjI2ODgsImV4cCI6MTY5MDcyNzQ4OH0.SWW540U7mf-Y-GgSQoNLCkFd6HmYpVLTjlzfgjfte8w"
					},
					"refreshToken": {
						"type": "string",
						"description": "Refresh security token",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QxZDJAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTAxMjI2ODgsImV4cCI6MTY5MDcyNzQ4OH0.SWW540U7mf-Y-GgSQoNLCkFd6HmYpVLTjlzfgjfte8w"
					},
					"user": {
						"type": "object",
						"required": ["uid", "name", "email", "isNewUser", "avatarUrl"],
						"properties": {
							"uid": {
								"type": "string",
								"description": "User id",
								"example": "64bd39c0b38fc2fe5b5dfef8"
							},
							"name": {
								"type": "string",
								"description": "User name",
								"format": "text"
							},
							"email": {
								"type": "string",
								"description": "User email",
								"format": "email"
							},
							"isNewUser": {
								"type": "boolean",
								"example": true
							},
							"avatarUrl": {
								"type": "string",
								"description": "User avatar",
								"example": "https://res.cloudinary.com/de2bdafop/image/upload/v1690014491/default-avatar_zfllbo.png"
							}
						}
					}
				}
			},
			"UserLoginRequest": {
				"type": "object",
				"required": ["email", "password"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User password",
						"example": "Qw123456"
					}
				}
			},
			"UserLoginResponse": {
				"type": "object",
				"required": ["token", "user"],
				"properties": {
					"token": {
						"type": "string",
						"description": "Security token",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QxZDJAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTAxMjI2ODgsImV4cCI6MTY5MDcyNzQ4OH0.SWW540U7mf-Y-GgSQoNLCkFd6HmYpVLTjlzfgjfte8w"
					},
					"refreshToken": {
						"type": "string",
						"description": "Refresh security token",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QxZDJAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTAxMjI2ODgsImV4cCI6MTY5MDcyNzQ4OH0.SWW540U7mf-Y-GgSQoNLCkFd6HmYpVLTjlzfgjfte8w"
					},
					"user": {
						"type": "object",
						"required": [
							"uid",
							"name",
							"email",
							"isNewUser",
							"avatarUrl",
							"favorites",
							"pets"
						],
						"properties": {
							"uid": {
								"type": "string",
								"description": "User id",
								"example": "64bd39c0b38fc2fe5b5dfef8"
							},
							"name": {
								"type": "string",
								"description": "User name",
								"format": "text",
								"example": "Mango"
							},
							"email": {
								"type": "string",
								"description": "User email",
								"format": "email"
							},
							"isNewUser": {
								"type": "boolean",
								"example": false
							},
							"avatarUrl": {
								"type": "string",
								"description": "User avatar url",
								"example": "https://res.cloudinary.com/de2bdafop/image/upload/v1690014491/default-avatar_zfllbo.png"
							},
							"birthday": {
								"type": "date",
								"description": "User birthday date",
								"example": "2022-12-22T00:00:00.000Z"
							},
							"phone": {
								"type": "string",
								"description": "User avatar",
								"example": "+380933443494"
							},
							"city": {
								"type": "string",
								"description": "User location",
								"example": "London"
							},
							"pets": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "Pet`s card id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								}
							},
							"favorites": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "Notice card id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								}
							}
						}
					}
				}
			},
			"CurrentUserResponse": {
				"type": "object",
				"required": ["user"],
				"properties": {
					"user": {
						"type": "object",
						"required": [
							"uid",
							"name",
							"email",
							"isNewUser",
							"avatarUrl",
							"favorites",
							"pets"
						],
						"properties": {
							"uid": {
								"type": "string",
								"description": "User id",
								"example": "64bd39c0b38fc2fe5b5dfef8"
							},
							"name": {
								"type": "string",
								"description": "User name",
								"format": "text",
								"example": "Mango"
							},
							"email": {
								"type": "string",
								"description": "User email",
								"format": "email"
							},
							"isNewUser": {
								"type": "boolean",
								"example": false
							},
							"avatarUrl": {
								"type": "string",
								"description": "User avatar url",
								"example": "https://res.cloudinary.com/de2bdafop/image/upload/v1690014491/default-avatar_zfllbo.png"
							},
							"birthday": {
								"type": "date",
								"description": "User birthday date",
								"example": "2022-12-22T00:00:00.000Z"
							},
							"phone": {
								"type": "string",
								"description": "User avatar",
								"example": "+380933443494"
							},
							"city": {
								"type": "string",
								"description": "User location",
								"example": "London"
							},
							"pets": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "Pet`s card id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								}
							},
							"favorites": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "Notice card id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								}
							}
						}
					}
				}
			},
			"RefreshRequest": {
				"type": "object",
				"required": ["refreshToken"],
				"properties": {
					"refreshToken": {
						"type": "string",
						"description": "Refresh security token",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QxZDJAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTAxMjI2ODgsImV4cCI6MTY5MDcyNzQ4OH0.SWW540U7mf-Y-GgSQoNLCkFd6HmYpVLTjlzfgjfte8w"
					}
				}
			},
			"RefreshResponse": {
				"type": "object",
				"required": ["token"],
				"properties": {
					"token": {
						"type": "string",
						"description": "Security token",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QxZDJAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTAxMjI2ODgsImV4cCI6MTY5MDcyNzQ4OH0.SWW540U7mf-Y-GgSQoNLCkFd6HmYpVLTjlzfgjfte8w"
					}
				}
			},
			"UpdateUserFieldsRequest": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "User name",
						"format": "text",
						"example": "Mango"
					},
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
					"birthday": {
						"type": "date",
						"description": "User birthday date",
						"example": "2022-12-22T00:00:00.000Z"
					},
					"phone": {
						"type": "string",
						"description": "User avatar",
						"example": "+380933443494"
					},
					"city": {
						"type": "string",
						"description": "User location",
						"example": "London"
					}
				}
			},
			"UpdateUserAvatarAndFieldsRequest": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "User name",
						"format": "text",
						"example": "Mango"
					},
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
					"birthday": {
						"type": "date",
						"description": "User birthday date",
						"example": "2022-12-22T00:00:00.000Z"
					},
					"phone": {
						"type": "string",
						"description": "User avatar",
						"example": "+380933443494"
					},
					"city": {
						"type": "string",
						"description": "User location",
						"example": "London"
					},
					"avatar": {
						"type": "string",
						"format": "binary",
						"description": "User avatar file"
					}
				}
			},
			"UpdateUserResponse": {
				"type": "object",
				"required": ["token", "user"],
				"properties": {
					"token": {
						"type": "string",
						"description": "Security token",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QxZDJAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTAxMjI2ODgsImV4cCI6MTY5MDcyNzQ4OH0.SWW540U7mf-Y-GgSQoNLCkFd6HmYpVLTjlzfgjfte8w"
					},
					"refreshToken": {
						"type": "string",
						"description": "Refresh security token",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QxZDJAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTAxMjI2ODgsImV4cCI6MTY5MDcyNzQ4OH0.SWW540U7mf-Y-GgSQoNLCkFd6HmYpVLTjlzfgjfte8w"
					},
					"user": {
						"type": "object",
						"required": [
							"uid",
							"name",
							"email",
							"isNewUser",
							"avatarUrl",
							"favorites",
							"pets"
						],
						"properties": {
							"uid": {
								"type": "string",
								"description": "User id",
								"example": "64bd39c0b38fc2fe5b5dfef8"
							},
							"name": {
								"type": "string",
								"description": "User name",
								"format": "text",
								"example": "Mango"
							},
							"email": {
								"type": "string",
								"description": "User email",
								"format": "email"
							},
							"isNewUser": {
								"type": "boolean",
								"example": false
							},
							"avatarUrl": {
								"type": "string",
								"description": "User avatar url",
								"example": "https://res.cloudinary.com/de2bdafop/image/upload/v1690014491/default-avatar_zfllbo.png"
							},
							"birthday": {
								"type": "date",
								"description": "User birthday date",
								"example": "2022-12-22T00:00:00.000Z"
							},
							"phone": {
								"type": "string",
								"description": "User avatar",
								"example": "+380933443494"
							},
							"city": {
								"type": "string",
								"description": "User location",
								"example": "London"
							},
							"pets": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "Pet`s card id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								}
							},
							"favorites": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "Notice card id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								}
							}
						}
					}
				}
			},
			"AddPetRequest": {
				"type": "object",
				"required": ["name", "date", "type", "file"],
				"properties": {
					"name": {
						"type": "string",
						"description": "Pet name",
						"format": "text",
						"example": "Peaches"
					},

					"date": {
						"type": "date",
						"description": "Pet birthday date",
						"example": "2022-12-22T00:00:00.000Z"
					},
					"type": {
						"type": "string",
						"description": "Pet`s type",
						"example": "cat"
					},
					"file": {
						"type": "string",
						"format": "binary",
						"description": "User avatar file"
					},
					"comments": {
						"type": "string",
						"description": "Pet`s description",
						"example": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, dolore."
					}
				}
			},
			"PetResponse": {
				"type": "object",
				"required": ["pet"],
				"properties": {
					"pet": {
						"type": "object",
						"required": ["_id", "category", "name", "date", "type", "fileUrl"],
						"properties": {
							"_id": {
								"type": "string",
								"description": "Pet id",
								"example": "64bd39c0b38fc2fe5b5dfef8"
							},
							"category": {
								"type": "string",
								"description": "Pet category",
								"example": "my-pet"
							},
							"name": {
								"type": "string",
								"description": "Pet name",
								"format": "text",
								"example": "Peaches"
							},

							"date": {
								"type": "date",
								"description": "Pet birthday date",
								"example": "2022-12-22T00:00:00.000Z"
							},
							"type": {
								"type": "string",
								"description": "Pet`s type",
								"example": "cat"
							},
							"fileUrl": {
								"type": "string",
								"description": "Pet image url",
								"example": "https://res.cloudinary.com/de2bdafop/image/upload/v1690014491/default-avatar_zfllbo.png"
							},
							"comments": {
								"type": "string",
								"description": "Pet`s description",
								"example": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, dolore."
							}
						}
					}
				}
			},
			"DeletePetResponse": {
				"type": "object",
				"required": ["_id"],
				"properties": {
					"_id": {
						"type": "string",
						"description": "Pet id",
						"example": "64bd39c0b38fc2fe5b5dfef8"
					}
				}
			},
			"SponsorsResponse": {
				"type": "object",
				"required": ["sponsors"],
				"properties": {
					"sponsors": {
						"type": "array",
						"items": {
							"type": "object",
							"required": [
								"_id",
								"title",
								"url",
								"addressUrl",
								"imageUrl",
								"address",
								"phone",
								"email",
								"workDays"
							],
							"properties": {
								"_id": {
									"type": "string",
									"description": "Sponsor`s id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								},
								"title": {
									"type": "string",
									"description": "Sponsor`s title",
									"example": "Притулок для бездомних тварин 'Сіріус'"
								},
								"url": {
									"type": "string",
									"description": "Sponsor`s page url",
									"example": "https://dogcat.com.ua"
								},
								"addressUrl": {
									"type": "string",
									"description": "Sponsor`s address url",
									"example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
								},
								"imageUrl": {
									"type": "string",
									"description": "Sponsor`s image url",
									"example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
								},
								"address": {
									"type": "string",
									"description": "Sponsor`s address",
									"example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
								},
								"phone": {
									"type": "string",
									"description": "Sponsor`s phone number",
									"example": "+380931934069"
								},
								"email": {
									"type": "string",
									"description": "Sponsor`s phone number",
									"format": "email"
								},
								"workDays": {
									"type": "array",
									"items": {
										"type": "object",
										"required": ["_id", "isOpen", "form", "to"],
										"properties": {
											"_id": {
												"type": "string",
												"description": "Array id",
												"example": "64bd39c0b38fc2fe5b5dfef8"
											},
											"isOpen": {
												"type": "boolean",
												"description": "Sponsor is open",
												"example": true
											},
											"from": {
												"type": "string",
												"description": "Opening time",
												"example": "09:00"
											},
											"to": {
												"type": "string",
												"description": "Closing time",
												"example": "20:00"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"ArticlesResponse": {
				"type": "object",
				"required": ["articles", "total"],
				"properties": {
					"articles": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["_id", "imgUrl", "title", "text", "date", "url"],
							"properties": {
								"_id": {
									"type": "string",
									"description": "Article`s id",
									"example": "64bd39c0b38fc2fe5b5dfef8"
								},
								"imgUrl": {
									"type": "string",
									"description": "Article`s image url",
									"example": "https://www.nytimes.com/images/2023/05/04/multimedia/04evening-nl-WH/04evening-nl-WH-blog480-v3.jpg"
								},
								"title": {
									"type": "string",
									"description": "Article`s title",
									"example": "The White House Pushes A.I. Leaders on Risks"
								},

								"text": {
									"type": "string",
									"description": "Article`s text",
									"example": "Also, four Proud Boys are found guilty of sedition. Here’s the latest at the end of Thursday."
								},
								"date": {
									"type": "date",
									"description": "Article`s date publication",
									"example": "2023-05-04T21:55:17.000Z"
								},
								"url": {
									"type": "string",
									"description": "Article`s url",
									"example": "https://www.nytimes.com/2023/05/04/briefing/white-house-ai-leaders-proud-boys-trial.html"
								}
							}
						}
					},
					"total": {
						"type": "integer",
						"description": "Return total counts of documents",
						"example": "1121"
					}
				}
			},
			"NoticesResponse": {
				"type": "object",
				"required": ["data"],
				"properties": {
					"data": {
						"type": "object",
						"required": ["notices", "total"],
						"properties": {
							"notices": {
								"type": "array",
								"items": {
									"type": "object",
									"required": [
										"_id",
										"name",
										"category",
										"date",
										"type",
										"fileUrl",
										"comments",
										"title",
										"sex",
										"location"
									],
									"properties": {
										"_id": {
											"type": "string",
											"description": "Notice`s id",
											"example": "64bd39c0b38fc2fe5b5dfef8"
										},
										"name": {
											"type": "string",
											"description": "Pet nickname",
											"example": "Rex"
										},
										"category": {
											"type": "string",
											"description": "Notice`s category",
											"example": "lost-found"
										},
										"date": {
											"type": "date",
											"description": "Pet birthday",
											"example": "2023-05-04T21:55:17.000Z"
										},
										"type": {
											"type": "string",
											"description": "Breed of pet",
											"example": "greyhound"
										},
										"fileUrl": {
											"type": "string",
											"description": "Notice`s image url",
											"example": "https://www.nytimes.com/images/2023/05/04/multimedia/04evening-nl-WH/04evening-nl-WH-blog480-v3.jpg"
										},
										"fileId": {
											"type": "string",
											"description": "Notice`s image id",
											"example": "file/file_5qhY9rIZidNQ7HmJFJkv1_x8fhfw"
										},

										"comments": {
											"type": "string",
											"description": "Notice`s comments",
											"example": "Also, four Proud Boys are found guilty of sedition. Here’s the latest at the end of Thursday."
										},
										"title": {
											"type": "string",
											"description": "Notice`s title",
											"example": "The White House Pushes A.I. Leaders on Risks"
										},
										"sex": {
											"type": "string",
											"description": "Pet gender",
											"example": "Male"
										},
										"location": {
											"type": "string",
											"description": "Pet's location, city",
											"example": "London"
										}
									}
								}
							},
							"total": {
								"type": "integer",
								"description": "Return total counts of documents",
								"example": "1121"
							}
						}
					}
				}
			}
		},
		"securitySchemes": {
			"Bearer": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
